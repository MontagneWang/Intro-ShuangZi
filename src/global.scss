// 最少需要传入两个颜色参数，不然下划线不会显示
@mixin underline($colors...) {
  // 使用可变参数
  text-decoration: none;
  position: relative;
  &:after {
    content: "";
    position: absolute;
    left: 0;
    bottom: -2px;
    width: 100%;
    height: 2px;
    background: linear-gradient(to right, $colors); // 使用 $colors 变量
  }
  &:hover {
    color: nth($colors, 1); // 设置 hover 时的颜色为第一个颜色
  }
}

@mixin hyperlink($color1, $color2) {
  text-decoration: none;

  &:link {
    color: $color1;
  }

  &:hover {
    color: $color2;
  }

  &:visited {
    color: $color1;
  }

  &:hover:visited {
    color: $color2;
  }
}

.fade-in {
  animation: fade-in 0.75s forwards;
}
.fadeInUp {
  opacity: 0;
  transform: translateY(50px);
  animation: fadeInUp 0.75s ease-in-out forwards;
}
// 动画名 | 持续时间 | 动画方式 | 延迟时间 | forwards 保持在最后一帧
.slide-from-left {
  animation: slide-from-left 1s ease 1s forwards;
}
.slide-from-right {
  animation: slide-from-right 1s ease 1s forwards;
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(50px);
  }
  100% {
    opacity: 1 !important;
    transform: translateY(0);
  }
}

@keyframes slide-from-left {
  0% {
    opacity: 0;
    transform: translateX(-20vw);
  }
  100% {
    opacity: 1;
  }
}

@keyframes slide-from-right {
  0% {
    opacity: 0;
    transform: translateX(20vw);
  }
  100% {
    opacity: 1;
  }
}
