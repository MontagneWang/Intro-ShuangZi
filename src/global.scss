// 最少需要传入两个颜色参数，不然下划线不会显示
@mixin underline($colors...) {
  text-decoration: none;
  position: relative;
  &:after {
    content: "";
    position: absolute;
    left: 0;
    bottom: -0.2vw;
    width: 100%;
    height: 0.2vw;
    background: linear-gradient(to right, $colors); // 使用 $colors 变量
  }
  &:hover {
    color: nth($colors, 1); // 设置 hover 时的颜色为第一个颜色
  }
}
@mixin hyperlink($color1, $color2) {
  text-decoration: none;
  &:link {
    color: $color1;
  }
  &:hover {
    color: $color2;
  }
  &:visited {
    color: $color1;
  }
  &:hover:visited {
    color: $color2;
  }
}
@mixin name {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.15);
  padding: 0.8vw 0.5vw 1.2vw;
  writing-mode: vertical-rl;
  border-radius: 0.5vw;
  z-index: -1;
  font-size: 3vw;
}
@mixin text($color) {
  opacity: 0;
  overflow: hidden;
  width: 15vw;
  max-width: 20vw;
  margin: 4% 1.6% 4.5% -13%;
  padding: 1.5% 1.4%;
  border-top-right-radius: 1vw;
  border-top: 0.25vw solid $color;
  border-right: 0.25vw solid $color;
  .el-card {
    --el-card-bg-color: rgba(0, 0, 0, 0.1);
    border: 0.1vw solid rgba(0, 0, 0, 0.15);
    margin-bottom: 0.25vw !important;
    font-size: 1.26vw;
  }
}
@mixin timeline {
  overflow: hidden;
  margin: 2%;
  margin-left: 0;
  flex-grow: 1; // 占满剩余空间
  background-color: #00000040;
  border-radius: 1vw;
  opacity: 0;
  .el-timeline {
    width: 92%;
    margin: 3.5% auto;
    --el-font-size-small: 1.3vw;
    --el-text-color-secondary: #fff;
    --el-timeline-node-size-large: 2vw;
    .el-card {
      width: 90%;
      font-size: 1.3vw;
      margin-top: 1vw;
      margin-left: 1vw;
      padding: 0.2vw 0 0.2vw 1vw;
      border-radius: 0.7vw;
      h3,
      p {
        margin: 1.2vw 0;
      }
    }
    .el-timeline-item {
      font-size: 1.5vw;
      --el-text-color-primary: #000;
      padding-bottom: 1vw;
      .single-line{
        margin-top: 1vw;
      }
    }
  }
}

.content {
  height: 100vh;
  overflow: hidden;
  .container {
    width: 84vw;
    height: 88vh;
    margin: 6vh auto;
    text-align: left;
    display: flex;
  }
}

a {
  text-decoration: none;
}
img {
  height: 100%;
}
.hide {
  opacity: 0;
}
.blur {
  filter: blur(0.25vw);
  transition: all 0.75s;
  &:hover {
    transition: all 0.75s;
    filter: none;
  }
}

.fade-in {
  animation: fade-in 0.75s ease forwards;
}
.fadeInUp {
  opacity: 0;
  transform: translateY(50px);
  animation: fadeInUp 0.75s ease-in-out forwards;
}
// 动画名 | 持续时间 | 动画方式 | 延迟时间 | forwards 保持在最后一帧
.slide-from-left {
  animation: slide-from-left 1s ease forwards;
}
.slide-from-right {
  animation: slide-from-right 1s ease forwards;
}
// 动画
@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(50px);
  }
  100% {
    opacity: 1 !important;
    transform: translateY(0);
  }
}
@keyframes slide-from-left {
  0% {
    opacity: 0;
    transform: translateX(-20vw);
  }
  100% {
    opacity: 1;
  }
}
@keyframes slide-from-right {
  0% {
    opacity: 0;
    transform: translateX(20vw);
  }
  100% {
    opacity: 1;
  }
}
@keyframes li-right2left {
  0% {
    opacity: 0;
    transform: translateX(70vw);
  }
  100% {
    opacity: 1;
    // transform: translateX(0vw);
  }
}
.move {
  animation: li-right2left 1s ease forwards;
}
@keyframes text-left2right {
  0% {
    opacity: 0;
    transform: translateX(-15vw);
  }
  100% {
    opacity: 1;
    // transform: translateX(0vw);
  }
}
.textMove {
  animation: text-left2right 1s ease forwards;
}
