// 最少需要传入两个颜色参数，不然下划线不会显示
@mixin underline($colors...) {
  // 使用可变参数
  text-decoration: none;
  position: relative;
  &:after {
    content: "";
    position: absolute;
    left: 0;
    bottom: -2px;
    width: 100%;
    height: 2px;
    background: linear-gradient(to right, $colors); // 使用 $colors 变量
  }
  &:hover {
    color: nth($colors, 1); // 设置 hover 时的颜色为第一个颜色
  }
}

@mixin hyperlink($color1, $color2) {
  text-decoration: none;

  &:link {
    color: $color1;
  }

  &:hover {
    color: $color2;
  }

  &:visited {
    color: $color1;
  }

  &:hover:visited {
    color: $color2;
  }
}

@mixin name{
  animation: fade-in 1s ease 2.5s forwards;
  opacity: 0;
  position: absolute;
  background-color: rgba(0, 0, 0, 0.15);
  padding: 0.8rem 0.5rem 1.2rem;
  writing-mode: vertical-rl;
  border-radius: 5px;
  z-index: -1;
  font-size: 3em;
}

@mixin timeline {
  position: absolute;
  top: 15vh;
  right: 10vw;
  height: 80vh;
  width: 40vw;
  margin-top: -5vh;
  background-color: #00000040;
  border-radius: 10px;
  padding: 2.5% 0 0 4.5%;
  box-sizing: border-box;
  overflow-x: hidden;
  overflow-y: hidden;
  text-align: left;
  opacity: 0;
}
@mixin text($color) {
  position: absolute;
  text-align: left;
  font-size: 1.1em;
  padding: 3%;
  margin-top: 2%;
  opacity: 0;
  width: 72%;
  transition: all 1s;
  border-top-right-radius: 10px;
  border-top: 1.5px solid $color;
  border-right: 1.5px solid $color;
}

.hide {
  opacity: 0;
}

.blur {
  filter: blur(2.5px);
  transition: all 0.75s;
}

.blur:hover {
  transition: all 0.75s;
  filter: none;
}
img {
  height: 100%;
}
// 动画
.fade-in {
  animation: fade-in 0.75s forwards;
}
.fadeInUp {
  opacity: 0;
  transform: translateY(50px);
  animation: fadeInUp 0.75s ease-in-out forwards;
}
// 动画名 | 持续时间 | 动画方式 | 延迟时间 | forwards 保持在最后一帧
.slide-from-left {
  animation: slide-from-left 1s ease 1s forwards;
}
.slide-from-right {
  animation: slide-from-right 1s ease 1s forwards;
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(50px);
  }
  100% {
    opacity: 1 !important;
    transform: translateY(0);
  }
}

@keyframes slide-from-left {
  0% {
    opacity: 0;
    transform: translateX(-20vw);
  }
  100% {
    opacity: 1;
  }
}

@keyframes slide-from-right {
  0% {
    opacity: 0;
    transform: translateX(20vw);
  }
  100% {
    opacity: 1;
  }
}

@keyframes li-right2left {
  0% {
    opacity: 0;
    transform: translateX(70vw);
  }
  100% {
    opacity: 1;
    // transform: translateX(0vw);
  }
}
.move {
  animation: li-right2left 1s ease forwards;
}

@keyframes text-left2right {
  0% {
    opacity: 0;
    transform: translateX(-15vw);
  }
  100% {
    opacity: 1;
    // transform: translateX(0vw);
  }
}
.textMove {
  animation: text-left2right 1s ease forwards;
}
